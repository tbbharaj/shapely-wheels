language: python
python: 3.5
dist: trusty
services: docker
filter_secrets: false
os: linux

cache:
  directories:
  - $HOME/.ccache
  - $HOME/.cache/pip

env:
  global:
  - REPO_DIR="Shapely"
  - BUILD_COMMIT=1.7.1
  - PLAT=x86_64
  - UNICODE_WIDTH=32
  - USE_CCACHE=1

addons:
  artifacts:
    paths:
    - $(ls wheelhouse/*.whl)

jobs:
  include:
  - name: "Python 3.5 x86_64 linux"
    os: linux
    env:
    - MB_PYTHON_VERSION=3.5
    - NP_BUILD_DEP=numpy==1.10.4
    - NP_TEST_DEP=numpy==1.11.3
  - name: "Python 3.6 x86_64 linux"
    os: linux
    env:
    - MB_PYTHON_VERSION=3.6
    - NP_BUILD_DEP=numpy==1.11.3
    - NP_TEST_DEP=numpy==1.11.3
  - name: "Python 3.7 x86_64 linux"
    os: linux
    env:
    - MB_PYTHON_VERSION=3.7
    - NP_BUILD_DEP=numpy==1.14.5
    - NP_TEST_DEP=numpy==1.14.5
  - name: "Python 3.8 x86_64 linux"
    os: linux
    env:
    - MB_PYTHON_VERSION=3.8
    - NP_BUILD_DEP=numpy==1.17.3
    - NP_TEST_DEP=numpy==1.17.3
  - name: "Python 3.6 aarch64 linux"
    arch: arm64-graviton2
    dist: focal
    virt: vm
    group: edge
    env:
    - MB_PYTHON_VERSION=3.6
    - PLAT=aarch64
    - NP_TEST_DEP=numpy>=1.19.0
    - DOCKER_TEST_IMAGE=multibuild/xenial_arm64v8
    - USE_CCACHE=0
    workspaces:
      use: ws1
    install:
      - echo "This stage will test and upload the AArch64 wheel"
  - name: "Python 3.7 aarch64 linux"
    arch: arm64-graviton2
    dist: focal
    virt: vm
    group: edge
    env:
    - MB_PYTHON_VERSION=3.7
    - PLAT=aarch64
    - NP_TEST_DEP=numpy>=1.19.0
    - DOCKER_TEST_IMAGE=multibuild/xenial_arm64v8
    - USE_CCACHE=0
    workspaces:
      use: ws2
    install:
      - echo "This stage will test and upload the AArch64 wheel"
  - name: "Python 3.8 aarch64 linux"
    arch: arm64-graviton2
    dist: focal
    virt: vm
    group: edge
    env:
    - MB_PYTHON_VERSION=3.8
    - PLAT=aarch64
    - NP_TEST_DEP=numpy>=1.19.0
    - DOCKER_TEST_IMAGE=multibuild/xenial_arm64v8
    - USE_CCACHE=0
    workspaces:
      use: ws3
    install:
      - echo "This stage will test and upload the AArch64 wheel"

before_install:
    - python -c "import fcntl; fcntl.fcntl(1, fcntl.F_SETFL, 0)"
    - BUILD_DEPENDS="$NP_BUILD_DEP cython==0.29.21 wheel==0.31.1"
    - TEST_DEPENDS="$NP_TEST_DEP attrs==19.1.0 pytest==4.0.2 mock;python_version<'3.4' boto3 packaging hypothesis==4.38.1 wheel==0.31.1 $GEN_DEPS"
    - source multibuild/common_utils.sh
    - source multibuild/travis_steps.sh
    - before_install

install:
    - clean_code $REPO_DIR $BUILD_COMMIT
    - build_wheel $REPO_DIR $PLAT
    - ls -l ${TRAVIS_BUILD_DIR}/wheelhouse/
    - unzip -l ${TRAVIS_BUILD_DIR}/wheelhouse/*.whl

script:
    - install_run $PLAT
