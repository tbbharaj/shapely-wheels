language: python
python: 3.6
dist: focal
services: docker
filter_secrets: false
os: linux

cache:
  directories:
  - $HOME/.ccache
  - $HOME/.cache/pip

env:
  global:
  - REPO_DIR="Shapely"
    #- BUILD_COMMIT=fc3e642
  - BUILD_COMMIT=72e11ed
  - PLAT=x86_64
  - UNICODE_WIDTH=32
  - USE_CCACHE=1

addons:
  artifacts:
    paths:
    - $(ls wheelhouse/*.whl)

jobs:
  include:
  - stage: Build and test wheel
    name: "Python 3.6 aarch64 linux"
    os: linux
    arch: arm64
    #dist: focal
    #virt: vm
    #group: edge
    env:
    - MB_PYTHON_VERSION=3.6
    - PLAT=aarch64
    - NP_BUILD_DEP=numpy>=1.19.0
    - DOCKER_IMAGE=quay.io/pypa/manylinux2014_${PLAT}
    - USE_CCACHE=0
    script:
       - echo "This stage will just build AArch64 wheel"
    #workspaces:
    #  create:
    #    name: ws1
    #    paths:
    #      - wheelhouse
    #after_success:
    #  - echo "This stage will not upload aarch64 wheel"
  - name: "Python 3.7 aarch64 linux"
    os: linux
    arch: arm64-graviton2
    dist: focal
    virt: vm
    group: edge
    env:
    - MB_PYTHON_VERSION=3.7
    - PLAT=aarch64
    - NP_BUILD_DEP=numpy>=1.19.0
    - DOCKER_IMAGE=quay.io/pypa/manylinux2014_${PLAT}
    - USE_CCACHE=0
    script:
       - echo "This stage will just build AArch64 wheel"
    #workspaces:
    #  create:
    #    name: ws2
    #    paths:
    #      - wheelhouse
    #after_success:
    #  - echo "This stage will not upload aarch64 wheel"
  - name: "Python 3.8 aarch64 linux"
    os: linux
    arch: arm64-graviton2
    dist: focal
    virt: vm
    group: edge
    env:
    - MB_PYTHON_VERSION=3.8
    - PLAT=aarch64
    - NP_BUILD_DEP=numpy>=1.19.0
    - DOCKER_IMAGE=quay.io/pypa/manylinux2014_${PLAT}
    - USE_CCACHE=0
    script:
       - echo "This stage will just build AArch64 wheel"
      #workspaces:
      #create:
      #  name: ws3
      #  paths:
      #    - wheelhouse
      # after_success:
      #- echo "This stage will not upload aarch64 wheel"
  - name: "Python 3.9 aarch64 linux"
    os: linux
    arch: arm64-graviton2
    dist: focal
    virt: vm
    group: edge
    env:
    - MB_PYTHON_VERSION=3.9
    - PLAT=aarch64
    - NP_BUILD_DEP=numpy>=1.19.0
    - DOCKER_IMAGE=quay.io/pypa/manylinux2014_${PLAT}
    - USE_CCACHE=0
    script:
       - echo "This stage will just build AArch64 wheel"
      #workspaces:
      #create:
      #  name: ws3
      #  paths:
      #    - wheelhouse
      # after_success:
      #- echo "This stage will not upload aarch64 wheel"

  - name: "Python 3.7 x86_64 linux"
    os: linux
    env:
    - MB_PYTHON_VERSION=3.7
    - NP_BUILD_DEP=numpy==1.15.4
    - NP_TEST_DEP=numpy==1.15.4
  - name: "Python 3.8 x86_64 linux"
    os: linux
    env:
    - MB_PYTHON_VERSION=3.8
    - NP_BUILD_DEP=numpy==1.17.5
    - NP_TEST_DEP=numpy==1.17.5
  - name: "Python 3.9 x86_64 linux"
    os: linux
    env:
    - MB_PYTHON_VERSION=3.9
    - NP_BUILD_DEP=numpy==1.19.4
    - NP_TEST_DEP=numpy==1.19.4
 # - name: "Python 3.6 osx"
 #   os: osx
 #   language: generic
 #   env:
 #   - MB_PYTHON_VERSION=3.6
 #   - NP_BUILD_DEP=numpy==1.15.4
 #   - NP_TEST_DEP=numpy==1.15.4
 # - name: "Python 3.7 osx"
 #   os: osx
 #   language: generic
 #   env:
 #   - MB_PYTHON_VERSION=3.7
 #   - NP_BUILD_DEP=numpy==1.15.4
 #   - NP_TEST_DEP=numpy==1.15.4
 #- name: "Python 3.8 macos"
 #   os: osx
 #   language: generic
 #   osx_image: xcode9.3
 #   env:
 #   - MB_PYTHON_VERSION=3.8
 #   - NP_BUILD_DEP=numpy==1.17.5
 #   - NP_TEST_DEP=numpy==1.17.5
 #   - MB_PYTHON_OSX_VER=10.9
 # - name: "Python 3.9 macos"
 #   os: osx
 #   language: generic
 #   osx_image: xcode9.3
 #   env:
 #   - MB_PYTHON_VERSION=3.9
 #   - NP_BUILD_DEP=numpy==1.19.4
 #   - NP_TEST_DEP=numpy==1.19.4
 #   - MB_PYTHON_OSX_VER=10.9

before_install:
    - python -c "import fcntl; fcntl.fcntl(1, fcntl.F_SETFL, 0)"
    - BUILD_DEPENDS="$NP_BUILD_DEP cython==0.29.21 wheel==0.34.2"
    - TEST_DEPENDS="$NP_TEST_DEP attrs==19.1.0 pytest==4.0.2 mock;python_version<'3.4' boto3 packaging hypothesis==4.38.1 wheel==0.34.2 $GEN_DEPS"
    - source multibuild/common_utils.sh
    - source multibuild/travis_steps.sh
    - before_install

install:
    - clean_code $REPO_DIR $BUILD_COMMIT
    - ls -lrt Shapely/
    - if [[ $PLAT != "aarch64" ]]; then build-linux-arm64-wheels.sh else build_wheel $REPO_DIR $PLAT; fi;
    - ls -l ${TRAVIS_BUILD_DIR}/wheelhouse/
      #- unzip -l ${TRAVIS_BUILD_DIR}/wheelhouse/*.whl

script:
    - install_run $PLAT
